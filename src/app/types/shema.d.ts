/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/api/v1/wishlist/{game-id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Add game to wishlist */
        post: operations["addGameToWishlist"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/wishlist/check/{game-id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Check if game is already in wishlist and in library */
        post: operations["checkIfGameIsInWishlist"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/transactions/revert": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Revert transaction for user in case of cancel */
        post: operations["revertTransactionToCart"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/checkout/stripe/create-payment": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Stripe endpoint to create session */
        post: operations["checkoutStripe"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/checkout/stripe/capture-payment": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Stripe capture to place the order */
        post: operations["placeStripeOrder"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/checkout/recharge/stripe/create-payment": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Stripe endpoint to create session for balance recharging */
        post: operations["balanceRechargeStripe"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/checkout/recharge/paypal/create-payment": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Paypal endpoint to create session for balance recharge */
        post: operations["balanceRechargePayPal"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/checkout/paypal/create-payment": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Paypal endpoint to create session */
        post: operations["checkoutPayPal"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/checkout/paypal/capture-payment": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** PaypalService capture to place the order */
        post: operations["placePayPalOrder"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/checkout/balance/create-payment": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Local endpoint to create payment */
        post: operations["checkoutLocal"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/checkout/balance/capture-payment": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Local endpoint to capture payment */
        post: operations["captureLocal"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/cart/add/{game-id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Add item to user's cart */
        post: operations["addToCart"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/wishlist": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Show wishlist of user */
        get: operations["getUserWishList"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/users/profile": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get user's information */
        get: operations["showUserInformation"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/users/games": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get user's games */
        get: operations["showUserGames"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/users/balance": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get user's balance */
        get: operations["showUserBalance"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/transactions": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get all transactions for user */
        get: operations["getAllTransactions"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/tags": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get all tags */
        get: operations["showAllTags"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/publishers": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get all publishers */
        get: operations["showAllPublishers"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/platforms": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get all platforms */
        get: operations["showAllPlatforms"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/genres": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get all genres */
        get: operations["showAllGenres"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/games": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get all games */
        get: operations["showAllGamesByPage"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/games/{game-id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get game by id */
        get: operations["showGameById"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/games/search": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get game by title (symbol by symbol) */
        get: operations["showSearchedGame"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/games/random": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get n-number of random games */
        get: operations["showRandomQtyOfGames"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/games/popular": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get most 'popular' games */
        get: operations["showPopularQtyOfGames"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/games/offers": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get games by 'special' offer */
        get: operations["showGamesBySpecialOffer"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/games/genre": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get games by genre */
        get: operations["showGamesByGenre"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/developers": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get all developers */
        get: operations["showAllDevelopers"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/cart": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get all items in user's cart */
        get: operations["getCartItems"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/wishlist/delete/{game-id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        /** Delete game to wishlist */
        delete: operations["deleteGameFromWishlist"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/cart/delete/{cart-id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        /** Delete item from user's cart */
        delete: operations["deleteCartItem"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/cart/cleanup": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        /** Cleanup whole user's cart */
        delete: operations["deleteAllCartItems"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        WishListResponse: {
            response?: string;
        };
        TransactionResponse: {
            response?: string;
        };
        PaymentResponseObject: {
            status?: string;
            message?: string;
            /** Format: int32 */
            httpStatus?: number;
            data?: Record<string, never>;
        };
        CartResponse: {
            response?: string;
        };
        ShortGameModel: {
            /** Format: int64 */
            id?: number;
            title?: string;
            description?: string;
            price?: number;
            coverImageUrl?: string;
            ownedByCurrentUser?: boolean;
        };
        FullUserInfoDTO: {
            externalId: string;
            email: string;
            birthdate?: string;
            givenName: string;
            familyName: string;
            gender: string;
            balance?: number;
        };
        LocalTime: {
            /** Format: int32 */
            hour?: number;
            /** Format: int32 */
            minute?: number;
            /** Format: int32 */
            second?: number;
            /** Format: int32 */
            nano?: number;
        };
        UserShortGamesDTO: {
            game?: components["schemas"]["ShortGameModel"];
            /** Format: date-time */
            purchaseDate?: string;
            playtime?: components["schemas"]["LocalTime"];
        };
        BalanceUserInfoDTO: {
            balance?: number;
        };
        TransactionDTO: {
            transactionId?: string;
            /** Format: date-time */
            createdAt?: string;
            /** Format: date-time */
            updatedAt?: string;
            totalAmount?: number;
            paymentMethods?: string;
            paid?: boolean;
            transactionGames?: components["schemas"]["TransactionGamesDTO"][];
            redirectUrl?: string;
            /** @enum {string} */
            balanceAction?: "BALANCE_RECHARGE" | "PAYMENT_WITH_BALANCE" | "NO_ACTION";
        };
        TransactionGamesDTO: {
            /** Format: int64 */
            id?: number;
            games?: components["schemas"]["ShortGameModel"];
            priceOnPay?: number;
        };
        Tag: {
            /** Format: int32 */
            id?: number;
            name: string;
        };
        Publisher: {
            /** Format: int32 */
            id?: number;
            name: string;
        };
        Platform: {
            /** Format: int32 */
            id?: number;
            name: string;
        };
        Genre: {
            /** Format: int64 */
            id?: number;
            name: string;
        };
        GameCriteria: {
            /** Format: int32 */
            page?: number;
            /** Format: int32 */
            size?: number;
            title?: string;
            maxPrice?: number;
            tags?: number[];
            genres?: string;
            platforms?: string;
            developers?: string;
            publishers?: string;
            sort?: string[];
        };
        GeneralGame: {
            games?: components["schemas"]["ShortGameModel"][];
            /** Format: int64 */
            totalItems?: number;
            /** Format: int32 */
            totalPages?: number;
            /** Format: int32 */
            currentPage?: number;
        };
        Developer: {
            /** Format: int32 */
            id?: number;
            name: string;
        };
        Game: {
            /** Format: int64 */
            id?: number;
            title: string;
            description?: string;
            /** Format: date */
            releaseDate?: string;
            systemRequirements?: string;
            price?: number;
            coverImageUrl?: string;
            discount: number;
            permitAge: string;
            publisher: components["schemas"]["Publisher"];
            developer: components["schemas"]["Developer"];
            tags?: components["schemas"]["Tag"][];
            genres?: components["schemas"]["Genre"][];
            platforms?: components["schemas"]["Platform"][];
            gameMedia?: components["schemas"]["GameMedia"];
        };
        GameMedia: {
            bannerUrl?: string;
            screenshotUrl?: string;
            trailer?: string;
            trailerScreenshot?: string;
        };
        GameModelWithGenreLimit: {
            /** Format: int64 */
            id?: number;
            title?: string;
            description?: string;
            price?: number;
            coverImageUrl?: string;
            genres?: components["schemas"]["Genre"][];
            ownedByCurrentUser?: boolean;
        };
        PopularGameModel: {
            /** Format: int64 */
            id?: number;
            title?: string;
            description?: string;
            price?: number;
            coverImageUrl?: string;
            genres?: components["schemas"]["Genre"][];
            ownedByCurrentUser?: boolean;
        };
        CartDTO: {
            cartItems?: components["schemas"]["CartItemDto"][];
            totalCost?: number;
        };
        CartItemDto: {
            /** Format: int64 */
            cartId?: number;
            userId: string;
            game: components["schemas"]["ShortGameModel"];
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    addGameToWishlist: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                "game-id": number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["WishListResponse"];
                };
            };
        };
    };
    checkIfGameIsInWishlist: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                "game-id": number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": boolean;
                };
            };
        };
    };
    revertTransactionToCart: {
        parameters: {
            query: {
                sessionId: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["TransactionResponse"];
                };
            };
        };
    };
    checkoutStripe: {
        parameters: {
            query: {
                balanceAction: "BALANCE_RECHARGE" | "PAYMENT_WITH_BALANCE" | "NO_ACTION";
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["PaymentResponseObject"];
                };
            };
        };
    };
    placeStripeOrder: {
        parameters: {
            query: {
                sessionId: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["PaymentResponseObject"];
                };
            };
        };
    };
    balanceRechargeStripe: {
        parameters: {
            query: {
                amount: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["PaymentResponseObject"];
                };
            };
        };
    };
    balanceRechargePayPal: {
        parameters: {
            query: {
                amount: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["PaymentResponseObject"];
                };
            };
        };
    };
    checkoutPayPal: {
        parameters: {
            query: {
                balanceAction: "BALANCE_RECHARGE" | "PAYMENT_WITH_BALANCE" | "NO_ACTION";
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["PaymentResponseObject"];
                };
            };
        };
    };
    placePayPalOrder: {
        parameters: {
            query: {
                sessionId: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["PaymentResponseObject"];
                };
            };
        };
    };
    checkoutLocal: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["PaymentResponseObject"];
                };
            };
        };
    };
    captureLocal: {
        parameters: {
            query: {
                sessionId: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["PaymentResponseObject"];
                };
            };
        };
    };
    addToCart: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                "game-id": number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["CartResponse"];
                };
            };
        };
    };
    getUserWishList: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ShortGameModel"][];
                };
            };
        };
    };
    showUserInformation: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["FullUserInfoDTO"];
                };
            };
        };
    };
    showUserGames: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["UserShortGamesDTO"][];
                };
            };
        };
    };
    showUserBalance: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["BalanceUserInfoDTO"];
                };
            };
        };
    };
    getAllTransactions: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["TransactionDTO"][];
                };
            };
        };
    };
    showAllTags: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["Tag"][];
                };
            };
        };
    };
    showAllPublishers: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["Publisher"][];
                };
            };
        };
    };
    showAllPlatforms: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["Platform"][];
                };
            };
        };
    };
    showAllGenres: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["Genre"][];
                };
            };
        };
    };
    showAllGamesByPage: {
        parameters: {
            query: {
                gameCriteria: components["schemas"]["GameCriteria"];
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["GeneralGame"];
                };
            };
        };
    };
    showGameById: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                "game-id": number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["Game"];
                };
            };
        };
    };
    showSearchedGame: {
        parameters: {
            query: {
                title: string;
                qty?: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["GameModelWithGenreLimit"][];
                };
            };
        };
    };
    showRandomQtyOfGames: {
        parameters: {
            query?: {
                qty?: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["GameModelWithGenreLimit"][];
                };
            };
        };
    };
    showPopularQtyOfGames: {
        parameters: {
            query?: {
                qty?: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["PopularGameModel"][];
                };
            };
        };
    };
    showGamesBySpecialOffer: {
        parameters: {
            query: {
                query: string;
                qty?: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["PopularGameModel"][];
                };
            };
        };
    };
    showGamesByGenre: {
        parameters: {
            query: {
                genre: string;
                qty?: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["GameModelWithGenreLimit"][];
                };
            };
        };
    };
    showAllDevelopers: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["Developer"][];
                };
            };
        };
    };
    getCartItems: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["CartDTO"];
                };
            };
        };
    };
    deleteGameFromWishlist: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                "game-id": number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["WishListResponse"];
                };
            };
        };
    };
    deleteCartItem: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                "cart-id": number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["CartResponse"];
                };
            };
        };
    };
    deleteAllCartItems: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["CartResponse"];
                };
            };
        };
    };
}
